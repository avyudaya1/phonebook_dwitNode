{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Persons","persons","handleDelete","map","person","name","number","style","marginLeft","onClick","id","PersonForm","eventHandlers","handleSubmit","handleNameChange","handleNumberChange","value","newName","newNumber","onSubmit","marginBottom","onChange","Button","variant","color","type","Filter","filterText","handleFilterChange","Alert","props","elevation","Notification","notification","message","status","useState","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","baseUrl","data","getAll","axios","get","then","response","create","newObject","post","update","put","deleteData","delete","App","setPersons","filteredPersons","setFilteredPersons","setNewName","setNewNumber","setFilterText","val","handleNotification","notificationMessage","setNotificationMessage","handleNotificationMessage","pos","charAt","length","setTimeout","useEffect","phonebookService","initialPhonebook","deletePerson","text","window","confirm","filter","catch","error","alert","Grid","item","xs","container","justify","spacing","display","alignItems","justifyContent","marginTop","height","src","alt","target","toString","trim","splice","newPersons","toLowerCase","includes","preventDefault","find","p","newPerson","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"8MAmBeA,EAnBC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACvB,OACI,8BAEOD,EAAQE,KAAI,SAAAC,GACR,OACI,8BACKA,EAAOC,KADZ,IACmBD,EAAOE,OACtB,wBAAQC,MAAO,CAACC,WAAY,IAAKC,QAAS,kBAAIP,EAAaE,EAAOM,GAAIN,EAAOC,OAA7E,sBAFID,EAAOM,U,QCYvBC,EAjBI,SAAC,GACmC,IAAD,IADjCC,cAAgBC,EACiB,EADjBA,aAAcC,EACG,EADHA,iBAAkBC,EACf,EADeA,mBACf,IAAjCC,MAAQC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAClC,OACI,uBAAMC,SAAUN,EAAhB,UACI,sBAAKN,MAAO,CAACa,aAAc,IAA3B,mBACU,uBAAOJ,MAAOC,EAASI,SAAUP,OAE3C,sBAAKP,MAAO,CAACa,aAAc,IAA3B,qBACY,uBAAOJ,MAAOE,EAAWG,SAAUN,OAE/C,qBAAKR,MAAO,CAACa,aAAc,IAA3B,SACI,cAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,KAAK,SAAjD,uBCFDC,EAVA,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,mBACzB,OACI,+BACI,2CACY,uBAAOZ,MAAOW,EAAYN,SAAUO,U,kBCA5D,SAASC,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGR,QAAQ,UAAaO,IAGtD,IAuBeE,EAvBM,SAAC,GAA0C,IAAD,IAAvCC,aAAeC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAC9C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJH,GAAQ,IAGV,OAAgB,OAAZJ,EACK,KAIL,cAACQ,EAAA,EAAD,CAAUL,KAAMA,EAAMM,iBAAkB,IAAMC,QAASL,EAAvD,SACE,cAAC,EAAD,CAAOK,QAASL,EAAaM,SAAUV,EAAvC,SACGD,O,iBCxBLY,EAAU,eAwBDC,EAFF,CAACC,OApBC,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASL,SAkBvBM,OAfP,SAAAC,GAEX,OADgBL,IAAMM,KAAKT,EAASQ,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASL,SAafS,OAVf,SAAC9C,EAAI4C,GAEhB,OADgBL,IAAMQ,IAAN,UAAaX,EAAb,YAAwBpC,GAAM4C,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASL,SAQPW,WALnB,SAAChD,GAEhB,OADeuC,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BpC,IAC3ByC,MAAK,SAAAC,GAAQ,OAAIA,O,SC8JrBQ,EAvKH,WACR,MAA8BxB,mBAAS,IAAvC,mBAAOnC,EAAP,KAAgB4D,EAAhB,KACA,EAA8CzB,mBAAS,IAAvD,mBAAO0B,EAAP,KAAwBC,EAAxB,KAEA,EAA8B3B,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgB+C,EAAhB,KACA,EAAkC5B,mBAAS,IAA3C,mBAAOlB,EAAP,KAAkB+C,EAAlB,KACA,EAAoC7B,mBAAS,IAA7C,mBAAOT,EAAP,KAAmBuC,EAAnB,KAEA,EAAsD9B,mBAAS,CAC3DF,QAAS,KACTC,OAAQ,KACRgC,IAAK,KACLC,mBAAoB,OAJxB,mBAAOC,EAAP,KAA4BC,EAA5B,KAqBMC,EAA4B,SAACrC,EAASC,GACxC,GAAc,UAAXA,EACCmC,EAAuB,CAACpC,QAAQ,GAAD,OAAKA,EAAL,UAAsBC,OAAQ,iBAE5D,GAAY,aAATA,EACJmC,EAAuB,CAACpC,QAAQ,GAAD,OAAKA,EAAL,aAAyBC,OAAQ,iBAE/D,GAAc,qBAAXA,EAA8B,CAClC,IAAIqC,EAAMtC,EAAQuC,OAAOvC,EAAQwC,OAAQ,GAErCJ,EADO,MAARE,EACwB,CAACtC,QAAS,wDAAyDC,OAAO,SAEpF,MAARqC,EACkB,CAACtC,QAAQ,sDAAuDC,OAAO,SAGvE,CAACD,QAASA,EAASC,OAAQ,eAItDmC,EAAuB,CAACpC,QAAQ,kBAAD,OAAoBA,EAApB,0CAAqEC,OAAO,UAG/GwC,YAAW,WACPL,EAAuB,CAACpC,QAAS,KAAMC,OAAQ,SAChD,MAGPyC,qBAAU,WACNC,EACK7B,SACAG,MAAK,SAAA2B,GACFjB,EAAWiB,QAEpB,IAEH,IAuDMC,EAAe,SAACrE,EAAIsE,GACTC,OAAOC,QAAP,iBAAyBF,EAAzB,OAEVH,EACEnB,WAAWhD,GACXyC,MAAK,SAAAC,GACqB,MAApBA,EAASjB,QACR0B,EAAW5D,EAAQkF,QAAO,SAAA/E,GAAM,OAAIA,EAAOM,KAAOA,SAGzD0E,OAAM,SAAAC,GACHC,MAAM,iBAAD,OAAkB5E,EAAlB,sCACLmD,EAAW5D,EAAQkF,QAAO,SAAA/E,GAAM,OAAIA,EAAOM,KAAOA,UAM9D,OACI,eAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACI,eAACF,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAQ,SAASC,QAAS,EAA1C,UACI,cAACL,EAAA,EAAD,CAAMhF,MAAO,CAACsF,QAAQ,OAAQC,WAAW,QAASC,eAAe,SAAUC,UAAU,IAAKR,MAAI,EAA9F,SACI,qBAAKS,OAAO,MAAMC,IAAI,4DAA4DC,IAAI,gBAE1F,eAACZ,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,wDACA,cAAC,EAAD,CAAcvD,aAAcoC,IAC5B,cAAC,EAAD,CAAQ1C,WAAYA,EAAYC,mBAjIrB,SAACY,GAGxB,GAFA0B,EAAc1B,EAAM4D,OAAOpF,OAEiB,KAAzCwB,EAAM4D,OAAOpF,MAAMqF,WAAWC,OAC7BvC,EAAmB9D,EAAQsG,cACxB,CACH,IAAMC,EAAavG,EAAQkF,QAAO,SAAA/E,GAAM,OAA6E,IAAzEA,EAAOC,KAAKoG,cAAcC,SAASlE,EAAM4D,OAAOpF,MAAMyF,kBAClG1C,EAAmByC,OA2HX,kDACA,cAAC,EAAD,CACI5F,cAAiB,CAACC,aArFjB,SAAC2B,GAElB,GADAA,EAAMmE,iBACH1F,EAAQqF,OAAO5B,OAAS,EACvBY,MAAM,8BAGV,GAAGpE,EAAUoF,OAAO5B,OAAS,EACzBY,MAAM,gCAIV,GAAGrF,EAAQkF,QAAO,SAAA/E,GAAM,OAAIA,EAAOC,OAASY,KAASyD,OAAS,EAA9D,CAEI,GADQO,OAAOC,QAAP,UAAkBjE,EAAlB,wEACF,CACF,IAAMb,EAASH,EAAQ2G,MAAK,SAAAC,GAAC,OAAIA,EAAExG,OAASY,KACtC6F,EAAS,2BAAO1G,GAAP,IAAeE,OAAQY,IAEtC2D,EACKrB,OAAOpD,EAAOM,GAAIoG,GAClB3D,MAAK,SAAA4D,GACFlD,EAAW5D,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,OAASY,EAASb,EAAQ2G,MAClExC,EAA0BwC,EAAe1G,KAAM,YAC/C2D,EAAW,IACXC,EAAa,OAEhBmB,OAAM,SAAAC,GACHd,EAA0BnE,EAAOC,KAAM,qBAfvD,CAsBI,IAAMiD,EAAY,CACdjD,KAAMY,EAAQqF,OACdhG,OAAQY,EAAUoF,QAGtBzB,EACKxB,OAAOC,GACPH,MACG,SAAA4D,GACIlD,EAAW5D,EAAQ+G,OAAOD,IAC1BxC,EAA0BwC,EAAe1G,KAAM,SAC/C2D,EAAW,IACXC,EAAa,OAGpBmB,OAAM,SAAAC,GACHd,EAA0Bc,EAAMjC,SAASL,KAAKsC,MAAO,yBAoCjBvE,iBAvI3B,SAAC0B,GAAD,OAAWwB,EAAWxB,EAAM4D,OAAOpF,QAuIUD,mBAtI3C,SAACyB,GAAD,OAAWyB,EAAazB,EAAM4D,OAAOpF,SAuI5CA,MAAS,CAACC,UAASC,qBAK/B,oBAAIX,MAAO,CAACsF,QAAQ,OAAQC,WAAW,QAASC,eAAe,SAAUC,UAAU,IAAnF,kCACA,cAACT,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAQ,SAAxB,SAEkC,KAAtBhE,EAAW2E,OAAgB,cAAC,EAAD,CAASrG,QAASA,EAASC,aAAc,SAACQ,EAAIsE,GAAL,OAAaD,EAAarE,EAAIsE,MAC5F,cAAC,EAAD,CAAS/E,QAAS6D,EAAiB5D,aAAc,SAACQ,EAAIsE,GAAL,OAAcD,EAAarE,EAAIsE,Y,MCvK9GiC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.abf1c570.chunk.js","sourcesContent":["const Persons = ({persons, handleDelete}) => {\r\n    return (\r\n        <div>\r\n           {\r\n               persons.map(person => {\r\n                   return (\r\n                       <p key={person.id}>\r\n                           {person.name} {person.number}\r\n                           <button style={{marginLeft: 10}} onClick={()=>handleDelete(person.id, person.name)}>\r\n                                Delete\r\n                           </button>\r\n                       </p>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import {Button} from '@material-ui/core'\r\nconst PersonForm = ({eventHandlers: {handleSubmit, handleNameChange, handleNumberChange}, \r\n                     value: {newName, newNumber}}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div style={{marginBottom: 10}}>\r\n                Name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div style={{marginBottom: 10}}>\r\n                Number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div style={{marginBottom: 10}}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">add</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","const Filter = ({filterText, handleFilterChange}) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                Search: <input value={filterText} onChange={handleFilterChange}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, {useState} from 'react'\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Notification = ({ notification: {message, status } }) => {\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false)\r\n  };\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  \r\n    return (\r\n      <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={status}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteData = (id) => {\r\n    const request= axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst data = {getAll, create, update, deleteData}\r\n\r\nexport default data","import React, {useState, useEffect} from 'react'\r\n\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\n\r\nimport phonebookService from './services/phonebook'\r\n\r\nimport {Box, Grid } from '@material-ui/core'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [filteredPersons, setFilteredPersons] = useState([])\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filterText, setFilterText] = useState('')\r\n\r\n    const [notificationMessage, setNotificationMessage] = useState({\r\n        message: null,\r\n        status: null,\r\n        val: null,\r\n        handleNotification: null\r\n    })\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n    \r\n    const handleFilterChange = (event) => {\r\n        setFilterText(event.target.value)\r\n\r\n        if(event.target.value.toString().trim() === ''){\r\n            setFilteredPersons(persons.splice())\r\n        } else {\r\n            const newPersons = persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()) === true)\r\n            setFilteredPersons(newPersons)\r\n        }\r\n    }\r\n\r\n    const handleNotificationMessage = (message, status) => {\r\n        if(status === 'added'){\r\n            setNotificationMessage({message: `${message} added`, status: 'success'})\r\n        }\r\n        else if(status==='modified'){\r\n            setNotificationMessage({message: `${message} modified`, status: 'success'})\r\n        }\r\n        else if(status === 'validation error'){\r\n            let pos = message.charAt(message.length -3)\r\n            if(pos === '8') {\r\n                setNotificationMessage({message: 'Number too short. Required at least 8 character long.', status:'error'})\r\n            }\r\n            else if (pos === '3') {\r\n                setNotificationMessage({message:'Name too short. Required at least 3 character long.', status:'error'})\r\n            }\r\n            else{\r\n                setNotificationMessage({message: message, status: 'error',})\r\n            }\r\n        }\r\n        else {\r\n            setNotificationMessage({message: `Information of ${message} has already been removed from server.`, status:'error'})\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            setNotificationMessage({message: null, status: null})\r\n        }, 5000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        phonebookService\r\n            .getAll()\r\n            .then(initialPhonebook => {\r\n                setPersons(initialPhonebook)\r\n            })\r\n    }, [])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(newName.trim().length < 1){\r\n            alert('Name can not be empty')\r\n            return \r\n        }\r\n        if(newNumber.trim().length < 1){\r\n            alert('Number can not be empty')\r\n            return \r\n        }\r\n        \r\n        if(persons.filter(person => person.name === newName).length > 0){\r\n            var x = window.confirm(`${newName} already added to phonebook, replace the old number with a new one?`)\r\n            if(x) {\r\n                const person = persons.find(p => p.name === newName)\r\n                const newPerson = {...person, number: newNumber}\r\n\r\n                phonebookService\r\n                    .update(person.id, newPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.name !== newName? person: returnedPerson))\r\n                        handleNotificationMessage(returnedPerson.name, 'modified')\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                    })\r\n                    .catch(error => {\r\n                        handleNotificationMessage(person.name, 'not found')\r\n                    })\r\n            }\r\n            return\r\n        } \r\n        \r\n        else {\r\n            const newObject = {\r\n                name: newName.trim(),\r\n                number: newNumber.trim(),\r\n            }\r\n\r\n            phonebookService\r\n                .create(newObject)\r\n                .then(\r\n                    returnedPerson => {\r\n                        setPersons(persons.concat(returnedPerson))\r\n                        handleNotificationMessage(returnedPerson.name, 'added')\r\n                        setNewName('')\r\n                        setNewNumber('')  \r\n                    }\r\n                )\r\n                .catch(error => {\r\n                    handleNotificationMessage(error.response.data.error, 'validation error')\r\n                })\r\n        }\r\n               \r\n    }\r\n\r\n    const deletePerson = (id, text) => {\r\n        var result = window.confirm(`Delete ${text}?`)\r\n        if(result){\r\n           phonebookService\r\n            .deleteData(id)\r\n            .then(response => {\r\n                if(response.status === 204){\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                }\r\n            })\r\n            .catch(error=> {\r\n                alert(`the person of ${id} was already deleted from server.`)\r\n                setPersons(persons.filter(person => person.id !== id))\r\n            }) \r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} >\r\n            <Grid container justify=\"center\" spacing={2}>\r\n                <Grid style={{display:'flex', alignItems:'start', justifyContent:'center', marginTop:30}} item >\r\n                    <img height=\"70%\" src=\"https://media.giphy.com/media/l4FAUfcxoAWOzSkko/giphy.gif\" alt=\"phonebook\"/>\r\n                </Grid>\r\n                <Grid item  >\r\n                    <h1>Phonebook 📱</h1>\r\n                    <Notification notification={notificationMessage}/>\r\n                    <Filter filterText={filterText} handleFilterChange={handleFilterChange}/>\r\n                    <h1>Add 😎</h1>\r\n                    <PersonForm\r\n                        eventHandlers = {{handleSubmit, handleNameChange, handleNumberChange}}\r\n                        value = {{newName, newNumber}}\r\n                    />\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            <h1 style={{display:'flex', alignItems:'start', justifyContent:'center', marginTop:30}}  >Numbers 🙎</h1>\r\n            <Grid container justify=\"center\">\r\n                    {\r\n                        filterText.trim() === '' ? <Persons persons={persons} handleDelete={(id, text)=> deletePerson(id, text)} />\r\n                            : <Persons persons={filteredPersons} handleDelete={(id, text) => deletePerson(id, text)}/>\r\n                    } \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}